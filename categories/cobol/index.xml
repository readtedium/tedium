<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cobol on Tedium: The Dull Side of the Internet.</title>
    <link>/categories/cobol/</link>
    <description>Recent content in Cobol on Tedium: The Dull Side of the Internet.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 11 Apr 2017 06:30:52 +0000</lastBuildDate>
    
	<atom:link href="/categories/cobol/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>COBOLed Together</title>
      <link>/2017/04/11/cobol-programmers-cobol-cowboys/</link>
      <pubDate>Tue, 11 Apr 2017 06:30:52 +0000</pubDate>
      
      <guid>/2017/04/11/cobol-programmers-cobol-cowboys/</guid>
      <description>If you’re a regular reader of Y Combinator’s excellent mini-Reddit aggregator Hacker News (as I am), you start to see some trends arise. Programming languages and frameworks become incredibly popular (Ruby on Rails! Django! Node! Go!), but then start to lose their luster over time as programmers inevitably move onto the next coding innovation.  But the thing is, programming frameworks didn’t used to be this trendy, and some of the really old ones are becoming highly-sought-after in certain sectors because they’re becoming very uncommon.</description>
    </item>
    
  </channel>
</rss>